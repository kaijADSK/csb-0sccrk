{"version":3,"sources":["components/Seeker/Seeker.module.css","tracks/gossip.mp3","components/shared/Range/Range.module.css","components/Volume/Volume.module.css","components/Audio/index.js","components/PlayButton/index.js","functions/convertTime.js","components/shared/Range/index.js","components/Seeker/index.js","components/Volume/index.js","index.js"],"names":["module","exports","seeker","time","track","progress","handle","__webpack_require__","p","range","volume","Audio","forwardRef","_ref","ref","handleDuration","handleCurrentTime","react_default","a","createElement","onLoadedMetadata","e","target","duration","onTimeUpdate","currentTime","src","type","PlayButton","isPlaying","setIsPlaying","onClick","convertTime","minutes","Math","floor","seconds","concat","isNaN","Range","min","max","handleChange","value","_useState","useState","_useState2","Object","slicedToArray","isHovered","setIsHovered","percentage","inlineStyle","backgroundImage","className","stylesheet","onChange","parseFloat","onMouseOver","onMouseOut","step","style","defaultProps","Seeker","handleTrackClick","shared_Range","Volume","setVolume","App","setCurrentTime","_useState3","_useState4","setDuration","_useState5","_useState6","_useState7","_useState8","audioRef","useRef","useEffect","current","play","pause","components_Seeker","position","components_Audio","components_PlayButton","components_Volume","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.806c454c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"seeker\":\"Seeker_seeker__uoGkE\",\"time\":\"Seeker_time__HOM0H\",\"track\":\"Seeker_track__9ETSw\",\"progress\":\"Seeker_progress__-d2ZN\",\"handle\":\"Seeker_handle__3M191\"};","module.exports = __webpack_public_path__ + \"static/media/gossip.bb0801d1.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__t0ln1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volume\":\"Volume_volume__KrNBr\"};","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Audio = forwardRef(\n  ({ track, handleDuration, handleCurrentTime }, ref) => {\n    return (\n      <audio\n        ref={ref}\n        onLoadedMetadata={(e) => handleDuration(e.target.duration)}\n        onTimeUpdate={(e) => handleCurrentTime(e.target.currentTime)}\n      >\n        <source src={track} type=\"audio/mpeg\" />\n      </audio>\n    );\n  },\n);\n\nAudio.propTypes = {\n  handleDuration: PropTypes.func.isRequired,\n  handleCurrentTime: PropTypes.func.isRequired,\n  track: PropTypes.string.isRequired,\n};\n\nexport default Audio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlayButton({ isPlaying, setIsPlaying }) {\n  return (\n    <button onClick={() => setIsPlaying(!isPlaying)}>\n      {isPlaying ? 'Pause' : 'Play'}\n    </button>\n  );\n}\n\nPlayButton.propTypes = {\n  isPlaying: PropTypes.bool.isRequired,\n  setIsPlaying: PropTypes.func.isRequired,\n};\n\nexport default PlayButton;\n","/**\n * Convert time in seconts to string format: MM:SS\n *\n * @param {number} time\n */\nexport default function convertTime(time) {\n  let minutes = Math.floor(~~((time % 3600) / 60));\n  let seconds = Math.floor(time % 60);\n\n  // Add leading zero\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return isNaN(time) ? '0:00' : `${minutes}:${seconds}`;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport stylesheet from './Range.module.css';\n\nfunction Range({ min, max, handleChange, value }) {\n  const [isHovered, setIsHovered] = useState(false);\n  const percentage = ((value - min) / (max - min)) * 100;\n\n  const handleMouseOver = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseOut = () => {\n    setIsHovered(false);\n  };\n\n  const handleInputChange = (e) => {\n    handleChange(parseFloat(e.target.value));\n  };\n\n  const inlineStyle = {\n    backgroundImage: `-webkit-gradient(\n      linear,\n      left top,\n      right top,\n      color-stop(${percentage}%, ${isHovered ? 'green' : '#777'}),\n      color-stop(${percentage}%, #333)\n    )`,\n  };\n\n  return (\n    <input\n      className={stylesheet.range}\n      max={max}\n      min={min}\n      onChange={handleInputChange}\n      onMouseOver={handleMouseOver}\n      onMouseOut={handleMouseOut}\n      step=\"0.01\"\n      style={inlineStyle}\n      type=\"range\"\n      value={value}\n    />\n  );\n}\n\nRange.defaultProps = {\n  min: 0,\n};\n\nRange.propTypes = {\n  max: PropTypes.number.isRequired,\n  min: PropTypes.number,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Range;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport convertTime from '../../functions/convertTime';\nimport Range from '../shared/Range';\n\nimport stylesheet from './Seeker.module.css';\n\nfunction Seeker({ currentTime, duration, handleTrackClick }) {\n  return (\n    <div className={stylesheet.seeker}>\n      <span className={stylesheet.time}>{convertTime(currentTime)}</span>\n      <Range\n        max={duration}\n        value={currentTime}\n        handleChange={handleTrackClick}\n      />\n      <span className={stylesheet.time}>{convertTime(duration)}</span>\n    </div>\n  );\n}\n\nSeeker.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  handleTrackClick: PropTypes.func.isRequired,\n};\n\nexport default Seeker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Range from '../shared/Range';\n\nimport stylesheet from './Volume.module.css';\n\nfunction Volume({ volume, setVolume }) {\n  return (\n    <div className={stylesheet.volume}>\n      <Range max={1} value={volume} handleChange={setVolume} />\n    </div>\n  );\n}\n\nVolume.propTypes = {\n  setVolume: PropTypes.func.isRequired,\n  volume: PropTypes.PropTypes.number.isRequired,\n};\n\nexport default Volume;\n","import React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport track from './tracks/gossip.mp3';\n\nimport Audio from './components/Audio';\nimport PlayButton from './components/PlayButton';\nimport Seeker from './components/Seeker';\nimport Volume from './components/Volume';\n\nimport './styles.css';\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const audioRef = useRef(null);\n\n  const handleTrackClick = (position) => {\n    audioRef.current.currentTime = position;\n  };\n\n  /**\n   * When audio states change, update the audio DOM instance.\n   */\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [audioRef, isPlaying]);\n\n  useEffect(() => {\n    audioRef.current.volume = volume;\n  }, [audioRef, volume]);\n\n  return (\n    <div className=\"App\">\n      <Seeker\n        currentTime={currentTime}\n        duration={duration}\n        handleTrackClick={handleTrackClick}\n      />\n      <Audio\n        track={track}\n        ref={audioRef}\n        handleDuration={setDuration}\n        handleCurrentTime={setCurrentTime}\n      />\n      <PlayButton isPlaying={isPlaying} setIsPlaying={setIsPlaying} />\n      <Volume volume={volume} setVolume={setVolume} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}